---
- name: check if lcp folder exists
  stat: 
    path: /opt/{{ inventory_hostname }}/backend/
  register: lcp_folder

- name: Install epel-release
  package:
    name: epel-release
    state: present

- name: Install a base packages
  package:
    name:
      - sudo
      - yum-utils
      - htop
      - nano 
      - mc
      - vim
      - nmap
      - wget
      - iptables-services
#      - python-docker-py
    state: present

- name: Add groups
  group:
    name: aimc
    state: present

- name: Sudo access
  copy:
    content: >-
      # aimc team

      %aimc ALL=(ALL) NOPASSWD:ALL

    dest: /etc/sudoers.d/10-aimc-users
    owner: root
    group: root
    mode: 0440

- name: Add team member
  user:
    name: "{{ item.name }}"
    shell: /bin/bash
    groups: aimc
    append: yes
  with_items: "{{ teams.aimc.members }}"
  when: lookup('env', 'LOCAL_DEPLOY') != "true"
  ignore_errors: True

- name: Set authorized key
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.key }}"
  with_items: "{{ teams.aimc.members }}"
  when: lookup('env', 'LOCAL_DEPLOY') != "true"
  ignore_errors: True

- name: Create docker group
  group:
    name: "docker"
    state: present

- name: Set hostname
  shell: hostnamectl set-hostname freeipa.aimc.io

- name: Ensure hostname is in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}"

- name: Add jounald rotation rule
  lineinfile:
    path: /etc/systemd/journald.conf
    line: SystemMaxUse=1g

- name: Add docker images prune command to crontab
  lineinfile:
    path: /etc/crontab
    line: 0 3 * * SUN root /bin/docker system prune --volumes -a -f

#Create folders

- name: Create base folders
  file:
    path: "{{ item }}"
    state: directory
    mode: '777'
  with_items:
    - "/opt/freeipa"
    - "/opt/nginx"
    - "/opt/services"
    - "/tmp/freeipa"
#Copy files

- name: Copy files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  vars:
    - local_run: "{{ item.local_run }}"
  with_items:
    - { src: 'docker.yaml.j2',dest: '/opt/docker-compose.yaml' }
    - { src: './templates/configs/logrotate_syslog.j2',dest: '/etc/logrotate.d/syslog' }
    - { src: 'nginx.conf.j2',dest: '/opt/nginx/freeipa.conf' }
  ignore_errors: True